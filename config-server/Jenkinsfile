pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    jenkins: kaniko-build
spec:
  containers:
    - name: maven
      image: maven:3.9.6-eclipse-temurin-17
      command: ['cat']
      tty: true
    - name: kaniko
      image: gcr.io/kaniko-project/executor:latest
      command: ["/kaniko/executor"]
      args:
        - "--dockerfile=/workspace/Dockerfile"
        - "--context=dir:///workspace"
        - "--destination=harbor.local/takapedia/config-server:\${GIT_TAG}"
        - "--insecure"
        - "--insecure-push"
        - "--skip-tls-verify"
        - "--skip-tls-verify-pull"
        - "--cache=true"
        - "--cache-dir=/cache"
      volumeMounts:
        - name: kaniko-secret
          mountPath: /kaniko/.docker
  volumes:
    - name: kaniko-secret
      secret:
        secretName: kaniko-secret
"""
        }
    }

    parameters {
        choice(name: 'SPRING_PROFILE', choices: ['dev', 'staging', 'prod'], description: 'Spring profile')
        string(name: 'GIT_TAG', defaultValue: '', description: 'Git tag for image versioning (leave empty to auto-detect)')
    }

    environment {
        IMAGE_NAME = "harbor.local/takapedia/config-server"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/adityars-sidqi/takapedia.git'
            }
        }

        stage('Build JAR') {
            steps {
                dir('config-server') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build & Push Image with Kaniko') {
            steps {
                dir('config-server') {
                    container('kaniko') {
                        // Kaniko arg sudah otomatis jalan dari podTemplate
                        echo "Image build with tag: ${params.TAG_NAME}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes (Docker Desktop)') {
            steps {
                sh '''
                    export KUBECONFIG=$KUBECONFIG_FILE
                    kubectl apply -f k8s/config-server.yaml --namespace=takapedia
                '''
            }
        }
    }
}
