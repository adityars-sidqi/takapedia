pipeline {
    agent any

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: '0.0.1', description: 'Docker image tag (e.g. from pom.xml)')
        choice(name: 'SPRING_PROFILE', choices: ['dev', 'staging', 'prod'], description: 'Spring profile')
    }

    environment {
        IMAGE_NAME = "harbor.local:7777/takapedia/config-server"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/adityars-sidqi/takapedia.git'
            }
        }

        stage('Build JAR') {
            steps {
                dir('config-server') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('config-server') {
                    sh 'docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Push to Harbor') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'harbor-creds', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh '''
                      echo "$HARBOR_PASS" | docker login harbor.local:7777 -u "$HARBOR_USER" --password-stdin
                      docker push ${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-takapedia', variable: 'KUBECONFIG_FILE')]) {
                    sh '''
                        mkdir -p /root/.kube
                        cp $KUBECONFIG_FILE /root/.kube/config
                        kubectl apply -f k8s/config-server.yaml --namespace=takapedia
                    '''
                }
            }
        }
    }
}
