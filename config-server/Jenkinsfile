pipeline {
  agent {
        kubernetes {
            label 'config-server-agent'
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: maven
      image: maven:3.9.6-eclipse-temurin-21-alpine
      command: ['cat']
      tty: true
    - name: docker
      image: docker:24.0.6-cli
      command: ['cat']
      tty: true
      volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
    }
  }

    environment {
        IMAGE_NAME = "harbor.local/takapedia/config-server"
        TAG = "${env.BUILD_NUMBER}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build JAR') {
            steps {
                container('maven') {
                    dir('config-server') {
                        sh 'mvn clean package -DskipTests'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('config-server') {
                    sh """
                        docker build -t $IMAGE_NAME:$TAG .
                        docker tag $IMAGE_NAME:$TAG $IMAGE_NAME:latest
                    """
                }
            }
        }

        stage('Push to Harbor') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'harbor-creds', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh """
                        echo "$HARBOR_PASS" | docker login harbor.local -u "$HARBOR_USER" --password-stdin
                        docker push $IMAGE_NAME:$TAG
                        docker push $IMAGE_NAME:latest
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl apply -f k8s/config-server-deployment.yaml'
            }
        }
    }
}
