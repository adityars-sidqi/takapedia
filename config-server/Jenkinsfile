pipeline {
    agent {
        kubernetes {
            label 'kaniko'
            defaultContainer 'maven'
            yamlFile 'kaniko/kaniko-pod.yaml'
        }
    }

    parameters {
        choice(name: 'SPRING_PROFILE', choices: ['dev', 'staging', 'prod'], description: 'Spring profile')
        string(name: 'GIT_TAG', defaultValue: '', description: 'Git tag for image versioning (leave empty to auto-detect)')
    }

    environment {
        IMAGE_NAME = "harbor.local/takapedia/config-server"
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/adityars-sidqi/takapedia.git'
            }
        }

        stage('Build JAR') {
            steps {
                dir('config-server') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build & Push Image with Kaniko') {
            steps {
                dir('config-server') {
                    container('kaniko') {
                        script {
                            def resolvedTag = params.GIT_TAG?.trim()
                            if (!resolvedTag) {
                                resolvedTag = sh(
                                    script: "git describe --tags --abbrev=0 || echo snapshot",
                                    returnStdout: true
                                ).trim()
                            }

                            def imageWithTag = "${IMAGE_NAME}:${resolvedTag}"

                            sh """
                                /kaniko/executor \
                                  --context `pwd` \
                                  --dockerfile `pwd`/Dockerfile \
                                  --destination ${imageWithTag} \
                                  --insecure \
                                  --skip-tls-verify \
                                  --verbosity info
                            """
                        }
                    }
                }
            }
        }

        stage('Deploy to Kubernetes (Docker Desktop)') {
            steps {
                sh '''
                    export KUBECONFIG=$KUBECONFIG_FILE
                    kubectl apply -f k8s/config-server.yaml --namespace=takapedia
                '''
            }
        }
    }
}
