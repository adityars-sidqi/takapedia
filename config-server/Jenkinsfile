pipeline {
    agent any

    parameters {
        string(name: 'IMAGE_TAG', defaultValue: '0.0.1', description: 'Docker image tag (e.g. from pom.xml)')
        choice(name: 'SPRING_PROFILE', choices: ['dev', 'staging', 'prod'], description: 'Spring profile')
    }

    environment {
        IMAGE_NAME = "harbor.takapedia.local:7777/takapedia/config-server"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/adityars-sidqi/takapedia.git'
            }
        }

        stage('Build JAR') {
            steps {
                dir('config-server') {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Build & Push Image with Kaniko') {
            agent {
                kubernetes {
                    label 'kaniko'
                    defaultContainer 'kaniko'
                }
            }
            steps {
                dir('config-server') {
                    container('kaniko') {
                        sh '''
                        /kaniko/executor \
                          --context `pwd` \
                          --dockerfile `pwd`/Dockerfile \
                          --destination harbor.takapedia.local:7777/takapedia/config-server:${IMAGE_TAG} \
                          --insecure \
                          --skip-tls-verify \
                          --verbosity info
                        '''
                    }
                }
            }
        }

        stage('Deploy to Minikube') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig-takapedia', variable: 'KUBECONFIG_FILE')]) {
                    sh '''
                        export KUBECONFIG=$KUBECONFIG_FILE
                        kubectl apply -f k8s/config-server.yaml --namespace=takapedia
                    '''
                }
            }
        }
    }
}
