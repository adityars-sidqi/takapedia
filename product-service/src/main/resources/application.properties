spring.application.name=product-service
server.port=8082

management.endpoints.web.exposure.include=refresh,health,info

# Config Server (gunakan nama service dari docker-compose)
spring.cloud.config.uri=${CONFIG_URI:http://localhost:8888}
spring.config.import=optional:configserver:${CONFIG_URI:http://localhost:8888}
spring.cloud.config.enabled=true
spring.cloud.config.fail-fast=true
spring.cloud.config.retry.max-attempts=5
spring.cloud.config.retry.initial-interval=2000

# Eureka Service Discovery
spring.cloud.discovery.enabled=true
eureka.client.service-url.defaultZone=${EUREKA_URI:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.healthcheck.enabled=true
eureka.client.registry-fetch-interval-seconds=30
eureka.client.instance-info-replication-interval-seconds=30
eureka.instance.prefer-ip-address=true

#OAuth
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak:8080/realms/takapedia
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/takapedia/protocol/openid-connect/certs

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/product_db
spring.datasource.username=product_user
spring.datasource.password=product_user
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA / Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# HikariCP configuration
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=ProductServiceHikariCP

# Disable unused datasource initialization
spring.sql.init.mode=never

logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - [%X{traceId}] %msg%n

# Redis Configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.timeout=2000
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false